 '''
            with connection.cursor() as cursor:
                cursor.execute('SELECT w FROM lock_stock WHERE id = %s', (1,))
                write = cursor.fetchall()
            err = False
            if write[0][0] != '0': #if someones updating the stock w-w case 
                redirect('main')
            else:
                #acquire lock
                with connection.cursor() as cursor:
                    cursor.execute('UPDATE lock_stock SET r = 1 WHERE id = %s', (1,))
                #perform read
                #check for out of stock and remove that from cart and redirect back
                for i in range(len(pids)):
                    with connection.cursor() as cursor:
                        cursor.execute('BEGIN TRANSACTION;')
                        cursor.execute('SELECT stock FROM product WHERE product_id = %s;', (pids[i],))
                        cursor.execute('COMMIT;')
                        stock_data = cursor.fetchall()

                    errTuple = []
                    print(stock_data)
                    if int(qtys[i]) > int(stock_data[0][0]):
                        #remove from cart
                        err = True
                        with connection.cursor() as cursor:
                            cursor.execute('DELETE FROM cart WHERE customer_email = %s and product_id = %s', (cookie_value, pids[i]))
                        errTuple.append(pids[i])   
                
                #leave lock
                with connection.cursor() as cursor:
                    cursor.execute('UPDATE lock_stock SET w = 0 WHERE id = %s', (1,))

                return redirect('cart')       '''        